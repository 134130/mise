name: test
on:
  push:
    tags: ["v*"]
    branches: ["main", "mise"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  MISE_TRUSTED_CONFIG_PATHS: ${{ github.workspace }}

jobs:
  unit:
    runs-on: arc-runner-set
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.RTX_GITHUB_BOT_TOKEN || github.token }}
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt
      - run: cargo nextest run --all-features
        env:
          RUST_BACKTRACE: "1"
      - run: cargo deny check
      - run: cargo msrv verify
      - run: cargo machete --with-metadata
      - run: ./scripts/test-standalone.sh
      - run: cargo build --all-features
      - run: ./target/debug/mise settings set experimental true
      - uses: actions/cache@v4
        with:
          path: |
            ~/.local/share/mise/installs
            ~/.local/share/mise/plugins
          key: mise-tools-${{ hashFiles('.mise.toml') }}
          restore-keys: mise-tools
      - run: ./target/debug/mise install
      - run: ./target/debug/mise run render
      - if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == 'jdx/mise'
        run: ./target/debug/mise run lint-fix && git diff HEAD
      - if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == 'jdx/mise'
        uses: EndBug/add-and-commit@v9
        with:
          push: true
          author_name: mise[bot]
          author_email: 123107610+mise-en-dev@users.noreply.github.com
      - uses: actions-rust-lang/rustfmt@v1
      - run: ./target/debug/mise run lint

  coverage:
    name: coverage-${{matrix.tranche}}
    runs-on: arc-runner-set
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        tranche: [0, 1]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: coverage
          save-if: ${{ github.ref_name == 'main' }}
      - name: Test w/ coverage
        uses: nick-fields/retry@v3
        env:
          GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RUST_BACKTRACE: "1"
          MISE_GITHUB_BOT_TOKEN: ${{ secrets.RTX_GITHUB_BOT_TOKEN }}
          MISE_EXPERIMENTAL: "1"
          TEST_TRANCHE: ${{matrix.tranche}}
          TEST_TRANCHE_COUNT: 2
          TEST_ALL: ${{github.ref_name == 'release' && '1' || '0'}}
        with:
          timeout_minutes: 30
          max_attempts: 1
          #          max_attempts: 2
          command: mise tasks run test:coverage
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        continue-on-error: true
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: lcov.info
      # - name: Upload to codecov.io
      #   uses: codecov/codecov-action@v3
      #   with:
      #     fail_ci_if_error: false
      #     files: lcov.info
